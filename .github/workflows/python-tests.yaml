name: Python Tests

on:
  push:
    branches:
      - '*'
      - '!main'

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup py installation
        uses: actions/setup-python@v2
        with: 
          python-version: 3.x

      - name: Install dependancies
        run: pip install PyQt5 opencv-python numpy pillow scipy matplotlib pytest

      - name: Run tests
        run: pytest -s test/test_ecosystem.py

      - name: Create Pull Request
        run: |
          $BASE="main"
          $HEAD="${{ github.ref }}"
          $TITLE="Automated PR from $HEAD to $BASE"
          $BODY="This PR was created automatically after successful tests"
          $Headers = @{
            Authorization = "token $GITHUB_TOKEN"
          }
          $Payload = @{
            title = $TITLE
            base = $BASE
            head = $HEAD
            body = $BODY
          }
          $Response = Invoke-RestMethod -Uri "https://api.github.com/repos/$env:GITHUB_REPOSITORY/pulls" -Method Post -Headers $Headers -Body ($Payload | ConvertTo-Json)
          $PR_URL = $Response.html_url
          Write-Host "Created Pull Request: $PR_URL"
        if: success()

      - name: Merge Pull Request
        run: |
          $PR_NUMBER = (Invoke-RestMethod -Uri "https://api.github.com/repos/$env:GITHUB_REPOSITORY/pulls?head=$env:GITHUB_ACTOR:$env:GITHUB_REF").number
          if ([string]::IsNullOrEmpty($PR_NUMBER)) {
            Write-Host "Pull Request not found."
            exit 1
          }
          Invoke-RestMethod -Uri "https://api.github.com/repos/$env:GITHUB_REPOSITORY/pulls/$PR_NUMBER/merge" -Method Put -Headers @{ Authorization = "token $GITHUB_TOKEN" }
        if: success()